{
    var(func: uid(@Person@)) {
        knows {
            ~hasCreator @filter(has(~containerOf))  {
                tag as hasTag {
                    postCount as count(~hasTag) @filter(ge(creationDate, "@Start@") AND le(creationDate, "@End@"))
                }

            }
        }
    }

    q(func: uid(tag), orderdesc: val(postCount), first: 10) {
        name
        val(postCount)
    }
}

------------------------------------------------------------

curl ubuntu:8080/query -XPOST -s -d '
{
    var(func: uid(3458764513820542057)) {
        knows {
            ~hasCreator @filter(has(~containerOf))  {
                tag as hasTag {
                    postCount as count(~hasTag) @filter(ge(creationDate, "2012-02-06") AND le(creationDate, "2012-02-10"))
                }

            }
        }
    }

    q(func: uid(tag), orderdesc: val(postCount), first: 10) {
        name
        val(postCount)
    }
}
' | python -m json.tool


curl ubuntu:8080/query -XPOST -s -d '
{
    var(func: uid(3458764513820542057)) {
        knows {
            ~hasCreator @filter(has(~containerOf))  {
                tag as hasTag {
                    postCount as count(~hasTag) @filter(ge(creationDate, "2012-02-06") AND le(creationDate, "2012-02-10")) {
                    }
                }

            }
        }
    }

    q(func: uid(tag), orderdesc: val(postCount), first: 10) {
        _uid_
        name
        val(postCount)
    }
}
' | python -m json.tool

