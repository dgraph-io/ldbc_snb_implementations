{
    var(func: uid(@Person@)) {
        friend1 as knows {
            friend2 as knows {
                friend3 as knows
            }
        }
    }

    q(func: uid(friend1, friend2, friend3), orderdesc: birthday, first: 20) @filter(NOT uid(@Person@) AND eq(firstName, "@Name@")) {
        _uid_
        birthday
        firstName
        lastName
        ~knows @filter(uid(@Person@)) {
            creationDate
        }
        gender
        browserUsed
        locationIP
        email
        language
        isLocatedIn {
            name
        }
    }
}

------------------------------------------------------------

curl ubuntu:8080/query -XPOST -s -d '

{
    var(func: uid(3458788703076356249)) {
        friend1 as knows {
            friend2 as knows {
                friend3 as knows
            }
        }
    }

    q(func: uid(friend1, friend2, friend3), orderdesc: birthday, first: 20) @filter(NOT uid(3458788703076356249) AND eq(firstName, "Cesar")) {
        _uid_
        birthday
        firstName
        lastName
        ~knows @filter(uid(3458788703076356249)) {
            creationDate
        }
        gender
        browserUsed
        locationIP
        email
        language
        isLocatedIn {
            name
        }
    }
}
' | python -m json.tool


curl ubuntu:8080/query -XPOST -s -d '
{
    var(func: uid(3458764513820542057)) {
        friend1 as knows {
            friend2 as knows {
                friend3 as knows
            }
        }
    }

    q(func: uid(friend1, friend2, friend3), orderdesc: birthday, first: 20) @filter(NOT uid(3458764513820542057) AND eq(firstName, "Lin")) {
        _uid_
        birthday
        firstName
        lastName
        ~knows @filter(uid(3458764513820542057)) {
            creationDate
        }
        gender
        browserUsed
        locationIP
        email
        language
        isLocatedIn {
            name
        }
        studyAt {
            name
        }
        workAt {
            name
        }
    }
}
' | python -m json.tool


curl ubuntu:8080/query -XPOST -s -d '
{
    recurse(func: eq(xid, "person_1129"), depth: 3, orderdesc: lastName, first: 1) {
        knows
        xid
        firstName
        lastName
    }
}
' | python -m json.tool


3458764513820542057
3458764513820542057

curl ubuntu:8080/query -XPOST -s -d '
{
    recurse(func: uid(3458764513820542057), depth: 2) {
        _uid_
        firstName
        knows {
            _uid_
            firstName
        }
    }
}
' | python -m json.tool

curl ubuntu:8080/query -XPOST -s -d '
{
    recurse(func: uid(3458764513820542057), depth: 3, orderdesc: lastName, first: 20) {
        knows
        _uid_
        firstName
    }
}
' | python -m json.tool


curl ubuntu:8080/query -XPOST -s -d '
{
    recurse(func: uid(3458764513820542057), depth: 3) {
        knows
        _uid_
        firstName
    }
}
' | python -m json.tool
